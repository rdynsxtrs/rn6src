--- a/build/config.guess	2024-11-20 10:48:35.000000000 +0100
+++ b/build/config.guess	2024-11-24 01:22:29.000000000 +0100
@@ -1,14 +1,14 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
-#   Copyright 1992-2024 Free Software Foundation, Inc.
+#   Copyright 1992-2021 Free Software Foundation, Inc.
 
 # shellcheck disable=SC2006,SC2268 # see below for rationale
 
-timestamp='2024-07-27'
+timestamp='2021-06-03'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
+# the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful, but
@@ -47,7 +47,7 @@
 usage="\
 Usage: $0 [OPTION]
 
-Output the configuration name of the system '$me' is run on.
+Output the configuration name of the system \`$me' is run on.
 
 Options:
   -h, --help         print this help, then exit
@@ -60,13 +60,13 @@
 GNU config.guess ($timestamp)
 
 Originally written by Per Bothner.
-Copyright 1992-2024 Free Software Foundation, Inc.
+Copyright 1992-2021 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
 
 help="
-Try '$me --help' for more information."
+Try \`$me --help' for more information."
 
 # Parse command line
 while test $# -gt 0 ; do
@@ -102,8 +102,8 @@
 # temporary files to be created and, as you can see below, it is a
 # headache to deal with in a portable fashion.
 
-# Historically, 'CC_FOR_BUILD' used to be named 'HOST_CC'. We still
-# use 'HOST_CC' if defined, but it is deprecated.
+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
+# use `HOST_CC' if defined, but it is deprecated.
 
 # Portable tmp directory creation inspired by the Autoconf team.
 
@@ -123,7 +123,7 @@
     dummy=$tmp/dummy
     case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in
 	,,)    echo "int x;" > "$dummy.c"
-	       for driver in cc gcc c17 c99 c89 ; do
+	       for driver in cc gcc c89 c99 ; do
 		   if ($driver -c -o "$dummy.o" "$dummy.c") >/dev/null 2>&1 ; then
 		       CC_FOR_BUILD=$driver
 		       break
@@ -155,9 +155,6 @@
 
 	set_cc_for_build
 	cat <<-EOF > "$dummy.c"
-	#if defined(__ANDROID__)
-	LIBC=android
-	#else
 	#include <features.h>
 	#if defined(__UCLIBC__)
 	LIBC=uclibc
@@ -165,8 +162,6 @@
 	LIBC=dietlibc
 	#elif defined(__GLIBC__)
 	LIBC=gnu
-	#elif defined(__LLVM_LIBC__)
-	LIBC=llvm
 	#else
 	#include <stdarg.h>
 	/* First heuristic to detect musl libc.  */
@@ -174,7 +169,6 @@
 	LIBC=musl
 	#endif
 	#endif
-	#endif
 	EOF
 	cc_set_libc=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`
 	eval "$cc_set_libc"
@@ -443,7 +437,7 @@
 	# This test works for both compilers.
 	if test "$CC_FOR_BUILD" != no_compiler_found; then
 	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
-		(CCOPTS="" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \
+		(CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
 		grep IS_64BIT_ARCH >/dev/null
 	    then
 		SUN_ARCH=x86_64
@@ -465,7 +459,7 @@
 		UNAME_RELEASE=`uname -v`
 		;;
 	esac
-	# Japanese Language versions have a version number like '4.1.3-JL'.
+	# Japanese Language versions have a version number like `4.1.3-JL'.
 	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/-/_/'`
 	GUESS=sparc-sun-sunos$SUN_REL
 	;;
@@ -634,8 +628,7 @@
 		sed 's/^		//' << EOF > "$dummy.c"
 		#include <sys/systemcfg.h>
 
-		int
-		main ()
+		main()
 			{
 			if (!__power_pc())
 				exit(1);
@@ -719,8 +712,7 @@
 		#include <stdlib.h>
 		#include <unistd.h>
 
-		int
-		main ()
+		int main ()
 		{
 		#if defined(_SC_KERNEL_BITS)
 		    long bits = sysconf(_SC_KERNEL_BITS);
@@ -912,7 +904,7 @@
 	fi
 	;;
     *:FreeBSD:*:*)
-	UNAME_PROCESSOR=`uname -p`
+	UNAME_PROCESSOR=`/usr/bin/uname -p`
 	case $UNAME_PROCESSOR in
 	    amd64)
 		UNAME_PROCESSOR=x86_64 ;;
@@ -937,9 +929,6 @@
     i*:PW*:*)
 	GUESS=$UNAME_MACHINE-pc-pw32
 	;;
-    *:SerenityOS:*:*)
-        GUESS=$UNAME_MACHINE-pc-serenity
-        ;;
     *:Interix*:*)
 	case $UNAME_MACHINE in
 	    x86)
@@ -974,37 +963,11 @@
 	GNU_REL=`echo "$UNAME_RELEASE" | sed -e 's/[-(].*//'`
 	GUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC
 	;;
-    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)
-	GUESS="$UNAME_MACHINE-pc-managarm-mlibc"
-	;;
-    *:[Mm]anagarm:*:*)
-	GUESS="$UNAME_MACHINE-unknown-managarm-mlibc"
-	;;
     *:Minix:*:*)
 	GUESS=$UNAME_MACHINE-unknown-minix
 	;;
     aarch64:Linux:*:*)
-	set_cc_for_build
-	CPU=$UNAME_MACHINE
-	LIBCABI=$LIBC
-	if test "$CC_FOR_BUILD" != no_compiler_found; then
-	    ABI=64
-	    sed 's/^	    //' << EOF > "$dummy.c"
-	    #ifdef __ARM_EABI__
-	    #ifdef __ARM_PCS_VFP
-	    ABI=eabihf
-	    #else
-	    ABI=eabi
-	    #endif
-	    #endif
-EOF
-	    cc_set_abi=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`
-	    eval "$cc_set_abi"
-	    case $ABI in
-		eabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;
-	    esac
-	fi
-	GUESS=$CPU-unknown-linux-$LIBCABI
+	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
 	;;
     aarch64_be:Linux:*:*)
 	UNAME_MACHINE=aarch64_be
@@ -1070,16 +1033,7 @@
     k1om:Linux:*:*)
 	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
 	;;
-    kvx:Linux:*:*)
-	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
-	;;
-    kvx:cos:*:*)
-	GUESS=$UNAME_MACHINE-unknown-cos
-	;;
-    kvx:mbr:*:*)
-	GUESS=$UNAME_MACHINE-unknown-mbr
-	;;
-    loongarch32:Linux:*:* | loongarch64:Linux:*:*)
+    loongarch32:Linux:*:* | loongarch64:Linux:*:* | loongarchx32:Linux:*:*)
 	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
 	;;
     m32r*:Linux:*:*)
@@ -1194,27 +1148,16 @@
 	;;
     x86_64:Linux:*:*)
 	set_cc_for_build
-	CPU=$UNAME_MACHINE
 	LIBCABI=$LIBC
 	if test "$CC_FOR_BUILD" != no_compiler_found; then
-	    ABI=64
-	    sed 's/^	    //' << EOF > "$dummy.c"
-	    #ifdef __i386__
-	    ABI=x86
-	    #else
-	    #ifdef __ILP32__
-	    ABI=x32
-	    #endif
-	    #endif
-EOF
-	    cc_set_abi=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`
-	    eval "$cc_set_abi"
-	    case $ABI in
-		x86) CPU=i686 ;;
-		x32) LIBCABI=${LIBC}x32 ;;
-	    esac
+	    if (echo '#ifdef __ILP32__'; echo IS_X32; echo '#endif') | \
+		(CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		grep IS_X32 >/dev/null
+	    then
+		LIBCABI=${LIBC}x32
+	    fi
 	fi
-	GUESS=$CPU-pc-linux-$LIBCABI
+	GUESS=$UNAME_MACHINE-pc-linux-$LIBCABI
 	;;
     xtensa*:Linux:*:*)
 	GUESS=$UNAME_MACHINE-unknown-linux-$LIBC
@@ -1234,7 +1177,7 @@
 	GUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION
 	;;
     i*86:OS/2:*:*)
-	# If we were able to find 'uname', then EMX Unix compatibility
+	# If we were able to find `uname', then EMX Unix compatibility
 	# is probably installed.
 	GUESS=$UNAME_MACHINE-pc-os2-emx
 	;;
@@ -1375,7 +1318,7 @@
 		GUESS=ns32k-sni-sysv
 	fi
 	;;
-    PENTIUM:*:4.0*:*)	# Unisys 'ClearPath HMP IX 4000' SVR4/MP effort
+    PENTIUM:*:4.0*:*)	# Unisys `ClearPath HMP IX 4000' SVR4/MP effort
 			# says <Richard.M.Bartel@ccMail.Census.GOV>
 	GUESS=i586-unisys-sysv4
 	;;
@@ -1421,11 +1364,8 @@
     BePC:Haiku:*:*)	# Haiku running on Intel PC compatible.
 	GUESS=i586-pc-haiku
 	;;
-    ppc:Haiku:*:*)	# Haiku running on Apple PowerPC
-	GUESS=powerpc-apple-haiku
-	;;
-    *:Haiku:*:*)	# Haiku modern gcc (not bound by BeOS compat)
-	GUESS=$UNAME_MACHINE-unknown-haiku
+    x86_64:Haiku:*:*)
+	GUESS=x86_64-unknown-haiku
 	;;
     SX-4:SUPER-UX:*:*)
 	GUESS=sx4-nec-superux$UNAME_RELEASE
@@ -1582,9 +1522,6 @@
     i*86:rdos:*:*)
 	GUESS=$UNAME_MACHINE-pc-rdos
 	;;
-    i*86:Fiwix:*:*)
-	GUESS=$UNAME_MACHINE-pc-fiwix
-	;;
     *:AROS:*:*)
 	GUESS=$UNAME_MACHINE-unknown-aros
 	;;
@@ -1597,9 +1534,6 @@
     *:Unleashed:*:*)
 	GUESS=$UNAME_MACHINE-unknown-unleashed$UNAME_RELEASE
 	;;
-    *:Ironclad:*:*)
-	GUESS=$UNAME_MACHINE-unknown-ironclad
-	;;
 esac
 
 # Do we have a guess based on uname results?
@@ -1623,7 +1557,6 @@
 #endif
 #endif
 #endif
-int
 main ()
 {
 #if defined (sony)
--- a/build/config.sub	2024-11-20 10:48:35.000000000 +0100
+++ b/build/config.sub	2024-11-24 01:22:29.000000000 +0100
@@ -1,14 +1,14 @@
 #! /bin/sh
 # Configuration validation subroutine script.
-#   Copyright 1992-2024 Free Software Foundation, Inc.
+#   Copyright 1992-2021 Free Software Foundation, Inc.
 
-# shellcheck disable=SC2006,SC2268,SC2162 # see below for rationale
+# shellcheck disable=SC2006,SC2268 # see below for rationale
 
-timestamp='2024-05-27'
+timestamp='2021-08-14'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
+# the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful, but
@@ -76,13 +76,13 @@
 version="\
 GNU config.sub ($timestamp)
 
-Copyright 1992-2024 Free Software Foundation, Inc.
+Copyright 1992-2021 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
 
 help="
-Try '$me --help' for more information."
+Try \`$me --help' for more information."
 
 # Parse command line
 while test $# -gt 0 ; do
@@ -120,6 +120,7 @@
 esac
 
 # Split fields of configuration type
+# shellcheck disable=SC2162
 saved_IFS=$IFS
 IFS="-" read field1 field2 field3 field4 <<EOF
 $1
@@ -129,7 +130,7 @@
 # Separate into logical components for further validation
 case $1 in
 	*-*-*-*-*)
-		echo "Invalid configuration '$1': more than four components" >&2
+		echo Invalid configuration \`"$1"\': more than four components >&2
 		exit 1
 		;;
 	*-*-*-*)
@@ -141,21 +142,10 @@
 		# parts
 		maybe_os=$field2-$field3
 		case $maybe_os in
-			  cloudabi*-eabi* \
-			| kfreebsd*-gnu* \
-			| knetbsd*-gnu* \
-			| kopensolaris*-gnu* \
-			| linux-* \
-			| managarm-* \
-			| netbsd*-eabi* \
-			| netbsd*-gnu* \
-			| nto-qnx* \
-			| os2-emx* \
-			| rtmk-nova* \
-			| storm-chaos* \
-			| uclinux-gnu* \
-			| uclinux-uclibc* \
-			| windows-* )
+			nto-qnx* | linux-* | uclinux-uclibc* \
+			| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \
+			| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \
+			| storm-chaos* | os2-emx* | rtmk-nova*)
 				basic_machine=$field1
 				basic_os=$maybe_os
 				;;
@@ -170,12 +160,8 @@
 		esac
 		;;
 	*-*)
+		# A lone config we happen to match not fitting any pattern
 		case $field1-$field2 in
-			# Shorthands that happen to contain a single dash
-			convex-c[12] | convex-c3[248])
-				basic_machine=$field2-convex
-				basic_os=
-				;;
 			decstation-3100)
 				basic_machine=mips-dec
 				basic_os=
@@ -183,88 +169,28 @@
 			*-*)
 				# Second component is usually, but not always the OS
 				case $field2 in
-					# Do not treat sunos as a manufacturer
+					# Prevent following clause from handling this valid os
 					sun*os*)
 						basic_machine=$field1
 						basic_os=$field2
 						;;
-					# Manufacturers
-					  3100* \
-					| 32* \
-					| 3300* \
-					| 3600* \
-					| 7300* \
-					| acorn \
-					| altos* \
-					| apollo \
-					| apple \
-					| atari \
-					| att* \
-					| axis \
-					| be \
-					| bull \
-					| cbm \
-					| ccur \
-					| cisco \
-					| commodore \
-					| convergent* \
-					| convex* \
-					| cray \
-					| crds \
-					| dec* \
-					| delta* \
-					| dg \
-					| digital \
-					| dolphin \
-					| encore* \
-					| gould \
-					| harris \
-					| highlevel \
-					| hitachi* \
-					| hp \
-					| ibm* \
-					| intergraph \
-					| isi* \
-					| knuth \
-					| masscomp \
-					| microblaze* \
-					| mips* \
-					| motorola* \
-					| ncr* \
-					| news \
-					| next \
-					| ns \
-					| oki \
-					| omron* \
-					| pc533* \
-					| rebel \
-					| rom68k \
-					| rombug \
-					| semi \
-					| sequent* \
-					| siemens \
-					| sgi* \
-					| siemens \
-					| sim \
-					| sni \
-					| sony* \
-					| stratus \
-					| sun \
-					| sun[234]* \
-					| tektronix \
-					| tti* \
-					| ultra \
-					| unicom* \
-					| wec \
-					| winbond \
-					| wrs)
-						basic_machine=$field1-$field2
-						basic_os=
-						;;
 					zephyr*)
 						basic_machine=$field1-unknown
 						basic_os=$field2
 						;;
+					# Manufacturers
+					dec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \
+					| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \
+					| unicom* | ibm* | next | hp | isi* | apollo | altos* \
+					| convergent* | ncr* | news | 32* | 3600* | 3100* \
+					| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \
+					| ultra | tti* | harris | dolphin | highlevel | gould \
+					| cbm | ns | masscomp | apple | axis | knuth | cray \
+					| microblaze* | sim | cisco \
+					| oki | wec | wrs | winbond)
+						basic_machine=$field1-$field2
+						basic_os=
+						;;
 					*)
 						basic_machine=$field1
 						basic_os=$field2
@@ -345,6 +271,26 @@
 				basic_machine=arm-unknown
 				basic_os=cegcc
 				;;
+			convex-c1)
+				basic_machine=c1-convex
+				basic_os=bsd
+				;;
+			convex-c2)
+				basic_machine=c2-convex
+				basic_os=bsd
+				;;
+			convex-c32)
+				basic_machine=c32-convex
+				basic_os=bsd
+				;;
+			convex-c34)
+				basic_machine=c34-convex
+				basic_os=bsd
+				;;
+			convex-c38)
+				basic_machine=c38-convex
+				basic_os=bsd
+				;;
 			cray)
 				basic_machine=j90-cray
 				basic_os=unicos
@@ -767,26 +713,15 @@
 		vendor=dec
 		basic_os=tops20
 		;;
-	delta | 3300 | delta-motorola | 3300-motorola | motorola-delta | motorola-3300)
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
 		cpu=m68k
 		vendor=motorola
 		;;
-	# This used to be dpx2*, but that gets the RS6000-based
-	# DPX/20 and the x86-based DPX/2-100 wrong.  See
-	# https://oldskool.silicium.org/stations/bull_dpx20.htm
-	# https://www.feb-patrimoine.com/english/bull_dpx2.htm
-	# https://www.feb-patrimoine.com/english/unix_and_bull.htm
-	dpx2 | dpx2[23]00 | dpx2[23]xx)
+	dpx2*)
 		cpu=m68k
 		vendor=bull
-		;;
-	dpx2100 | dpx21xx)
-		cpu=i386
-		vendor=bull
-		;;
-	dpx20)
-		cpu=rs6000
-		vendor=bull
+		basic_os=sysv3
 		;;
 	encore | umax | mmax)
 		cpu=ns32k
@@ -901,6 +836,18 @@
 	next | m*-next)
 		cpu=m68k
 		vendor=next
+		case $basic_os in
+		    openstep*)
+		        ;;
+		    nextstep*)
+			;;
+		    ns2*)
+		      basic_os=nextstep2
+			;;
+		    *)
+		      basic_os=nextstep3
+			;;
+		esac
 		;;
 	np1)
 		cpu=np1
@@ -989,13 +936,14 @@
 		;;
 
 	*-*)
+		# shellcheck disable=SC2162
 		saved_IFS=$IFS
 		IFS="-" read cpu vendor <<EOF
 $basic_machine
 EOF
 		IFS=$saved_IFS
 		;;
-	# We use 'pc' rather than 'unknown'
+	# We use `pc' rather than `unknown'
 	# because (1) that's what they normally are, and
 	# (2) the word "unknown" tends to confuse beginning users.
 	i*86 | x86_64)
@@ -1023,19 +971,15 @@
 
 # Decode basic machines in the full and proper CPU-Company form.
 case $cpu-$vendor in
-	# Here we handle the default manufacturer of certain CPU types in canonical form.
-	# It is in some cases the only manufacturer, in others, it is the most popular.
-	c[12]-convex | c[12]-unknown | c3[248]-convex | c3[248]-unknown)
-		vendor=convex
-		basic_os=${basic_os:-bsd}
-		;;
+	# Here we handle the default manufacturer of certain CPU types in canonical form. It is in
+	# some cases the only manufacturer, in others, it is the most popular.
 	craynv-unknown)
 		vendor=cray
 		basic_os=${basic_os:-unicosmp}
 		;;
 	c90-unknown | c90-cray)
 		vendor=cray
-		basic_os=${basic_os:-unicos}
+		basic_os=${Basic_os:-unicos}
 		;;
 	fx80-unknown)
 		vendor=alliant
@@ -1076,34 +1020,11 @@
 		;;
 
 	# Here we normalize CPU types with a missing or matching vendor
-	armh-unknown | armh-alt)
-		cpu=armv7l
-		vendor=alt
-		basic_os=${basic_os:-linux-gnueabihf}
-		;;
-
-	# Normalized CPU+vendor pairs that imply an OS, if not otherwise specified
-	m68k-isi)
-		basic_os=${basic_os:-sysv}
-		;;
-	m68k-sony)
-		basic_os=${basic_os:-newsos}
-		;;
-	m68k-tektronix)
-		basic_os=${basic_os:-bsd}
-		;;
-	m88k-harris)
-		basic_os=${basic_os:-sysv3}
-		;;
-	i386-bull | m68k-bull)
-		basic_os=${basic_os:-sysv3}
-		;;
-	rs6000-bull)
+	dpx20-unknown | dpx20-bull)
+		cpu=rs6000
+		vendor=bull
 		basic_os=${basic_os:-bosx}
 		;;
-	mips-sni)
-		basic_os=${basic_os:-sysv4}
-		;;
 
 	# Here we normalize CPU types irrespective of the vendor
 	amd64-*)
@@ -1111,7 +1032,7 @@
 		;;
 	blackfin-*)
 		cpu=bfin
-		basic_os=${basic_os:-linux}
+		basic_os=linux
 		;;
 	c54x-*)
 		cpu=tic54x
@@ -1134,7 +1055,7 @@
 		;;
 	m68knommu-*)
 		cpu=m68k
-		basic_os=${basic_os:-linux}
+		basic_os=linux
 		;;
 	m9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)
 		cpu=s12z
@@ -1144,12 +1065,12 @@
 		;;
 	parisc-*)
 		cpu=hppa
-		basic_os=${basic_os:-linux}
+		basic_os=linux
 		;;
 	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
 		cpu=i586
 		;;
-	pentiumpro-* | p6-* | 6x86-* | athlon-* | athlon_*-*)
+	pentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)
 		cpu=i686
 		;;
 	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
@@ -1158,6 +1079,9 @@
 	pentium4-*)
 		cpu=i786
 		;;
+	pc98-*)
+		cpu=i386
+		;;
 	ppc-* | ppcbe-*)
 		cpu=powerpc
 		;;
@@ -1191,10 +1115,13 @@
 	tx39el-*)
 		cpu=mipstx39el
 		;;
+	x64-*)
+		cpu=x86_64
+		;;
 	xscale-* | xscalee[bl]-*)
 		cpu=`echo "$cpu" | sed 's/^xscale/arm/'`
 		;;
-	arm64-* | aarch64le-*)
+	arm64-*)
 		cpu=aarch64
 		;;
 
@@ -1246,231 +1173,114 @@
 		# Recognize the canonical CPU types that are allowed with any
 		# company name.
 		case $cpu in
-			  1750a \
-			| 580 \
-			| [cjt]90 \
+			1750a | 580 \
 			| a29k \
-			| aarch64 \
-			| aarch64_be \
-			| aarch64c \
+			| aarch64 | aarch64_be \
 			| abacus \
-			| alpha \
-			| alpha64 \
-			| alpha64ev56 \
-			| alpha64ev6[78] \
-			| alpha64ev[4-8] \
-			| alpha64pca5[67] \
-			| alphaev56 \
-			| alphaev6[78] \
-			| alphaev[4-8] \
-			| alphapca5[67] \
+			| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \
+			| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \
+			| alphapca5[67] | alpha64pca5[67] \
 			| am33_2.0 \
 			| amdgcn \
-			| arc \
-			| arc32 \
-			| arc64 \
-			| arceb \
-			| arm \
-			| arm64e \
-			| arm64ec \
-			| arm[lb]e \
-			| arme[lb] \
-			| armv* \
+			| arc | arceb | arc32 | arc64 \
+			| arm | arm[lb]e | arme[lb] | armv* \
+			| avr | avr32 \
 			| asmjs \
-			| avr \
-			| avr32 \
 			| ba \
-			| be32 \
-			| be64 \
-			| bfin \
-			| bpf \
-			| bs2000 \
-			| c30 \
-			| c4x \
-			| c8051 \
-			| c[123]* \
-			| clipper \
-			| craynv \
-			| csky \
-			| cydra \
-			| d10v \
-			| d30v \
-			| dlx \
-			| dsp16xx \
-			| e2k \
-			| elxsi \
-			| epiphany \
-			| f30[01] \
-			| f700 \
-			| fido \
-			| fr30 \
-			| frv \
-			| ft32 \
-			| fx80 \
-			| h8300 \
-			| h8500 \
+			| be32 | be64 \
+			| bfin | bpf | bs2000 \
+			| c[123]* | c30 | [cjt]90 | c4x \
+			| c8051 | clipper | craynv | csky | cydra \
+			| d10v | d30v | dlx | dsp16xx \
+			| e2k | elxsi | epiphany \
+			| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \
+			| h8300 | h8500 \
+			| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
 			| hexagon \
-			| hppa \
-			| hppa1.[01] \
-			| hppa2.0 \
-			| hppa2.0[nw] \
-			| hppa64 \
-			| i*86 \
-			| i370 \
-			| i860 \
-			| i960 \
-			| ia16 \
-			| ia64 \
-			| ip2k \
-			| iq2000 \
-			| javascript \
+			| i370 | i*86 | i860 | i960 | ia16 | ia64 \
+			| ip2k | iq2000 \
 			| k1om \
-			| kvx \
-			| le32 \
-			| le64 \
+			| le32 | le64 \
 			| lm32 \
-			| loongarch32 \
-			| loongarch64 \
-			| m32c \
-			| m32r \
-			| m32rle \
-			| m5200 \
-			| m68000 \
-			| m680[012346]0 \
-			| m6811 \
-			| m6812 \
-			| m68360 \
-			| m683?2 \
-			| m68hc11 \
-			| m68hc12 \
-			| m68hcs12x \
-			| m68k \
-			| m88110 \
-			| m88k \
-			| maxq \
-			| mb \
-			| mcore \
-			| mep \
-			| metag \
-			| microblaze \
-			| microblazeel \
-			| mips* \
+			| loongarch32 | loongarch64 | loongarchx32 \
+			| m32c | m32r | m32rle \
+			| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \
+			| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \
+			| m88110 | m88k | maxq | mb | mcore | mep | metag \
+			| microblaze | microblazeel \
+			| mips | mipsbe | mipseb | mipsel | mipsle \
+			| mips16 \
+			| mips64 | mips64eb | mips64el \
+			| mips64octeon | mips64octeonel \
+			| mips64orion | mips64orionel \
+			| mips64r5900 | mips64r5900el \
+			| mips64vr | mips64vrel \
+			| mips64vr4100 | mips64vr4100el \
+			| mips64vr4300 | mips64vr4300el \
+			| mips64vr5000 | mips64vr5000el \
+			| mips64vr5900 | mips64vr5900el \
+			| mipsisa32 | mipsisa32el \
+			| mipsisa32r2 | mipsisa32r2el \
+			| mipsisa32r3 | mipsisa32r3el \
+			| mipsisa32r5 | mipsisa32r5el \
+			| mipsisa32r6 | mipsisa32r6el \
+			| mipsisa64 | mipsisa64el \
+			| mipsisa64r2 | mipsisa64r2el \
+			| mipsisa64r3 | mipsisa64r3el \
+			| mipsisa64r5 | mipsisa64r5el \
+			| mipsisa64r6 | mipsisa64r6el \
+			| mipsisa64sb1 | mipsisa64sb1el \
+			| mipsisa64sr71k | mipsisa64sr71kel \
+			| mipsr5900 | mipsr5900el \
+			| mipstx39 | mipstx39el \
 			| mmix \
-			| mn10200 \
-			| mn10300 \
+			| mn10200 | mn10300 \
 			| moxie \
-			| msp430 \
 			| mt \
-			| nanomips* \
-			| nds32 \
-			| nds32be \
-			| nds32le \
+			| msp430 \
+			| nds32 | nds32le | nds32be \
 			| nfp \
-			| nios \
-			| nios2 \
-			| nios2eb \
-			| nios2el \
-			| none \
-			| np1 \
-			| ns16k \
-			| ns32k \
-			| nvptx \
+			| nios | nios2 | nios2eb | nios2el \
+			| none | np1 | ns16k | ns32k | nvptx \
 			| open8 \
 			| or1k* \
 			| or32 \
 			| orion \
-			| pdp10 \
-			| pdp11 \
 			| picochip \
-			| pj \
-			| pjl \
-			| pn \
-			| power \
-			| powerpc \
-			| powerpc64 \
-			| powerpc64le \
-			| powerpcle \
-			| powerpcspe \
+			| pdp10 | pdp11 | pj | pjl | pn | power \
+			| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \
 			| pru \
 			| pyramid \
-			| riscv \
-			| riscv32 \
-			| riscv32be \
-			| riscv64 \
-			| riscv64be \
-			| rl78 \
-			| romp \
-			| rs6000 \
-			| rx \
-			| s390 \
-			| s390x \
+			| riscv | riscv32 | riscv32be | riscv64 | riscv64be \
+			| rl78 | romp | rs6000 | rx \
+			| s390 | s390x \
 			| score \
-			| sh \
-			| sh64 \
-			| sh64le \
-			| sh[12345][lb]e \
-			| sh[1234] \
-			| sh[1234]e[lb] \
-			| sh[23]e \
-			| sh[23]ele \
-			| sh[24]a \
-			| sh[24]ae[lb] \
-			| sh[lb]e \
-			| she[lb] \
-			| shl \
-			| sparc \
-			| sparc64 \
-			| sparc64b \
-			| sparc64v \
-			| sparc86x \
-			| sparclet \
+			| sh | shl \
+			| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \
+			| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \
+			| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \
 			| sparclite \
-			| sparcv8 \
-			| sparcv9 \
-			| sparcv9b \
-			| sparcv9v \
+			| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \
 			| spu \
-			| sv1 \
-			| sx* \
 			| tahoe \
 			| thumbv7* \
-			| tic30 \
-			| tic4x \
-			| tic54x \
-			| tic55x \
-			| tic6x \
-			| tic80 \
+			| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \
 			| tron \
 			| ubicom32 \
-			| v70 \
-			| v810 \
-			| v850 \
-			| v850e \
-			| v850e1 \
-			| v850e2 \
-			| v850e2v3 \
-			| v850es \
+			| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \
 			| vax \
-			| vc4 \
 			| visium \
 			| w65 \
-			| wasm32 \
-			| wasm64 \
+			| wasm32 | wasm64 \
 			| we32k \
-			| x86 \
-			| x86_64 \
-			| xc16x \
-			| xgate \
-			| xps100 \
-			| xstormy16 \
-			| xtensa* \
+			| x86 | x86_64 | xc16x | xgate | xps100 \
+			| xstormy16 | xtensa* \
 			| ymp \
-			| z80 \
-			| z8k)
+			| z8k | z80)
 				;;
 
 			*)
-				echo "Invalid configuration '$1': machine '$cpu-$vendor' not recognized" 1>&2
+				echo Invalid configuration \`"$1"\': machine \`"$cpu-$vendor"\' not recognized 1>&2
 				exit 1
 				;;
 		esac
@@ -1491,12 +1301,11 @@
 
 # Decode manufacturer-specific aliases for certain operating systems.
 
-if test x"$basic_os" != x
+if test x$basic_os != x
 then
 
-# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just
+# First recognize some ad-hoc caes, or perhaps split kernel-os, or else just
 # set os.
-obj=
 case $basic_os in
 	gnu/linux*)
 		kernel=linux
@@ -1511,6 +1320,7 @@
 		os=`echo "$basic_os" | sed -e 's|nto-qnx|qnx|'`
 		;;
 	*-*)
+		# shellcheck disable=SC2162
 		saved_IFS=$IFS
 		IFS="-" read kernel os <<EOF
 $basic_os
@@ -1526,10 +1336,6 @@
 		kernel=linux
 		os=`echo "$basic_os" | sed -e 's|linux|gnu|'`
 		;;
-	managarm*)
-		kernel=managarm
-		os=`echo "$basic_os" | sed -e 's|managarm|mlibc|'`
-		;;
 	*)
 		kernel=
 		os=$basic_os
@@ -1557,23 +1363,6 @@
 	unixware*)
 		os=sysv4.2uw
 		;;
-	# The marketing names for NeXT's operating systems were
-	# NeXTSTEP, NeXTSTEP 2, OpenSTEP 3, OpenSTEP 4.  'openstep' is
-	# mapped to 'openstep3', but 'openstep1' and 'openstep2' are
-	# mapped to 'nextstep' and 'nextstep2', consistent with the
-	# treatment of SunOS/Solaris.
-	ns | ns1 | nextstep | nextstep1 | openstep1)
-		os=nextstep
-		;;
-	ns2 | nextstep2 | openstep2)
-		os=nextstep2
-		;;
-	ns3 | nextstep3 | openstep | openstep3)
-		os=openstep3
-		;;
-	ns4 | nextstep4 | openstep4)
-		os=openstep4
-		;;
 	# es1800 is here to avoid being matched by es* (a different OS)
 	es1800*)
 		os=ose
@@ -1644,7 +1433,6 @@
 		;;
 	utek*)
 		os=bsd
-		vendor=`echo "$vendor" | sed -e 's|^unknown$|tektronix|'`
 		;;
 	dynix*)
 		os=bsd
@@ -1661,25 +1449,21 @@
 	386bsd)
 		os=bsd
 		;;
-	ctix*)
-		os=sysv
-		vendor=`echo "$vendor" | sed -e 's|^unknown$|convergent|'`
-		;;
-	uts*)
+	ctix* | uts*)
 		os=sysv
 		;;
 	nova*)
-		kernel=rtmk
-		os=nova
+		os=rtmk-nova
+		;;
+	ns2)
+		os=nextstep2
 		;;
 	# Preserve the version number of sinix5.
 	sinix5.*)
 		os=`echo "$os" | sed -e 's|sinix|sysv|'`
-		vendor=`echo "$vendor" | sed -e 's|^unknown$|sni|'`
 		;;
 	sinix*)
 		os=sysv4
-		vendor=`echo "$vendor" | sed -e 's|^unknown$|sni|'`
 		;;
 	tpf*)
 		os=tpf
@@ -1717,16 +1501,10 @@
 			os=eabi
 			;;
 		    *)
-			os=
-			obj=elf
+			os=elf
 			;;
 		esac
 		;;
-	aout* | coff* | elf* | pe*)
-		# These are machine code file formats, not OSes
-		obj=$os
-		os=
-		;;
 	*)
 		# No normalization, but not necessarily accepted, that comes below.
 		;;
@@ -1745,15 +1523,12 @@
 # system, and we'll never get to this point.
 
 kernel=
-obj=
 case $cpu-$vendor in
 	score-*)
-		os=
-		obj=elf
+		os=elf
 		;;
 	spu-*)
-		os=
-		obj=elf
+		os=elf
 		;;
 	*-acorn)
 		os=riscix1.2
@@ -1763,35 +1538,28 @@
 		os=gnu
 		;;
 	arm*-semi)
-		os=
-		obj=aout
+		os=aout
 		;;
 	c4x-* | tic4x-*)
-		os=
-		obj=coff
+		os=coff
 		;;
 	c8051-*)
-		os=
-		obj=elf
+		os=elf
 		;;
 	clipper-intergraph)
 		os=clix
 		;;
 	hexagon-*)
-		os=
-		obj=elf
+		os=elf
 		;;
 	tic54x-*)
-		os=
-		obj=coff
+		os=coff
 		;;
 	tic55x-*)
-		os=
-		obj=coff
+		os=coff
 		;;
 	tic6x-*)
-		os=
-		obj=coff
+		os=coff
 		;;
 	# This must come before the *-dec entry.
 	pdp10-*)
@@ -1813,43 +1581,28 @@
 		os=sunos3
 		;;
 	m68*-cisco)
-		os=
-		obj=aout
+		os=aout
 		;;
 	mep-*)
-		os=
-		obj=elf
-		;;
-	# The -sgi and -siemens entries must be before the mips- entry
-	# or we get the wrong os.
-	*-sgi)
-		os=irix
-		;;
-	*-siemens)
-		os=sysv4
+		os=elf
 		;;
 	mips*-cisco)
-		os=
-		obj=elf
+		os=elf
 		;;
-	mips*-*|nanomips*-*)
-		os=
-		obj=elf
+	mips*-*)
+		os=elf
 		;;
 	or32-*)
-		os=
-		obj=coff
+		os=coff
 		;;
-	# This must be before the sparc-* entry or we get the wrong os.
-	*-tti)
+	*-tti)	# must be before sparc entry or we get the wrong os.
 		os=sysv3
 		;;
 	sparc-* | *-sun)
 		os=sunos4.1.1
 		;;
 	pru-*)
-		os=
-		obj=elf
+		os=elf
 		;;
 	*-be)
 		os=beos
@@ -1873,7 +1626,7 @@
 		os=hpux
 		;;
 	*-hitachi)
-		os=hiuxwe2
+		os=hiux
 		;;
 	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
 		os=sysv
@@ -1917,6 +1670,12 @@
 	*-encore)
 		os=bsd
 		;;
+	*-sgi)
+		os=irix
+		;;
+	*-siemens)
+		os=sysv4
+		;;
 	*-masscomp)
 		os=rtu
 		;;
@@ -1924,12 +1683,10 @@
 		os=uxpv
 		;;
 	*-rom68k)
-		os=
-		obj=coff
+		os=coff
 		;;
 	*-*bug)
-		os=
-		obj=coff
+		os=coff
 		;;
 	*-apple)
 		os=macos
@@ -1947,11 +1704,10 @@
 
 fi
 
-# Now, validate our (potentially fixed-up) individual pieces (OS, OBJ).
-
+# Now, validate our (potentially fixed-up) OS.
 case $os in
 	# Sometimes we do "kernel-libc", so those need to count as OSes.
-	llvm* | musl* | newlib* | relibc* | uclibc*)
+	musl* | newlib* | relibc* | uclibc*)
 		;;
 	# Likewise for "kernel-abi"
 	eabi* | gnueabi*)
@@ -1959,308 +1715,82 @@
 	# VxWorks passes extra cpu info in the 4th filed.
 	simlinux | simwindows | spe)
 		;;
-	# See `case $cpu-$os` validation below
-	ghcjs)
-		;;
 	# Now accept the basic system types.
+	# The portable systems comes first.
 	# Each alternative MUST end in a * to match a version number.
-	  abug \
-	| aix* \
-	| amdhsa* \
-	| amigados* \
-	| amigaos* \
-	| android* \
-	| aof* \
-	| aos* \
-	| aros* \
-	| atheos* \
-	| auroraux* \
-	| aux* \
-	| beos* \
-	| bitrig* \
-	| bme* \
-	| bosx* \
-	| bsd* \
-	| cegcc* \
-	| chorusos* \
-	| chorusrdb* \
-	| clix* \
-	| cloudabi* \
-	| cnk* \
-	| conix* \
-	| cos* \
-	| cxux* \
-	| cygwin* \
-	| darwin* \
-	| dgux* \
-	| dicos* \
-	| dnix* \
-	| domain* \
-	| dragonfly* \
-	| drops* \
-	| ebmon* \
-	| ecoff* \
-	| ekkobsd* \
-	| emscripten* \
-	| emx* \
-	| es* \
-	| fiwix* \
-	| freebsd* \
-	| fuchsia* \
-	| genix* \
-	| genode* \
-	| glidix* \
-	| gnu* \
-	| go32* \
-	| haiku* \
-	| hcos* \
-	| hiux* \
-	| hms* \
-	| hpux* \
-	| ieee* \
-	| interix* \
-	| ios* \
-	| iris* \
-	| irix* \
-	| ironclad* \
-	| isc* \
-	| its* \
-	| l4re* \
-	| libertybsd* \
-	| lites* \
-	| lnews* \
-	| luna* \
-	| lynxos* \
-	| mach* \
-	| macos* \
-	| magic* \
-	| mbr* \
-	| midipix* \
-	| midnightbsd* \
-	| mingw32* \
-	| mingw64* \
-	| minix* \
-	| mint* \
-	| mirbsd* \
-	| mks* \
-	| mlibc* \
-	| mmixware* \
-	| mon960* \
-	| morphos* \
-	| moss* \
-	| moxiebox* \
-	| mpeix* \
-	| mpw* \
-	| msdos* \
-	| msys* \
-	| mvs* \
-	| nacl* \
-	| netbsd* \
-	| netware* \
-	| newsos* \
-	| nextstep* \
-	| nindy* \
-	| nonstopux* \
-	| nova* \
-	| nsk* \
-	| nucleus* \
-	| nx6 \
-	| nx7 \
-	| oabi* \
-	| ohos* \
-	| onefs* \
-	| openbsd* \
-	| openedition* \
-	| openstep* \
-	| os108* \
-	| os2* \
-	| os400* \
-	| os68k* \
-	| os9* \
-	| ose* \
-	| osf* \
-	| oskit* \
-	| osx* \
-	| palmos* \
-	| phoenix* \
-	| plan9* \
-	| powermax* \
-	| powerunix* \
-	| proelf* \
-	| psos* \
-	| psp* \
-	| ptx* \
-	| pw32* \
-	| qnx* \
-	| rdos* \
-	| redox* \
-	| rhapsody* \
-	| riscix* \
-	| riscos* \
-	| rtems* \
-	| rtmk* \
-	| rtu* \
-	| scout* \
-	| secbsd* \
-	| sei* \
-	| serenity* \
-	| sim* \
-	| skyos* \
-	| solaris* \
-	| solidbsd* \
-	| sortix* \
-	| storm-chaos* \
-	| sunos \
-	| sunos[34]* \
-	| superux* \
-	| syllable* \
-	| sym* \
-	| sysv* \
-	| tenex* \
-	| tirtos* \
-	| toppers* \
-	| tops10* \
-	| tops20* \
-	| tpf* \
-	| tvos* \
-	| twizzler* \
-	| uclinux* \
-	| udi* \
-	| udk* \
-	| ultrix* \
-	| unicos* \
-	| uniplus* \
-	| unleashed* \
-	| unos* \
-	| uwin* \
-	| uxpv* \
-	| v88r* \
-	|*vms* \
-	| vos* \
-	| vsta* \
-	| vxsim* \
-	| vxworks* \
-	| wasi* \
-	| watchos* \
-	| wince* \
-	| windiss* \
-	| windows* \
-	| winnt* \
-	| xenix* \
-	| xray* \
-	| zephyr* \
-	| zvmoe* )
+	gnu* | android* | bsd* | mach* | minix* | genix* | ultrix* | irix* \
+	     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]* \
+	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
+	     | sym* |  plan9* | psp* | sim* | xray* | os68k* | v88r* \
+	     | hiux* | abug | nacl* | netware* | windows* \
+	     | os9* | macos* | osx* | ios* \
+	     | mpw* | magic* | mmixware* | mon960* | lnews* \
+	     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \
+	     | aos* | aros* | cloudabi* | sortix* | twizzler* \
+	     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \
+	     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \
+	     | mirbsd* | netbsd* | dicos* | openedition* | ose* \
+	     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \
+	     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \
+	     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \
+	     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \
+	     | udi* | lites* | ieee* | go32* | aux* | hcos* \
+	     | chorusrdb* | cegcc* | glidix* | serenity* \
+	     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \
+	     | midipix* | mingw32* | mingw64* | mint* \
+	     | uxpv* | beos* | mpeix* | udk* | moxiebox* \
+	     | interix* | uwin* | mks* | rhapsody* | darwin* \
+	     | openstep* | oskit* | conix* | pw32* | nonstopux* \
+	     | storm-chaos* | tops10* | tenex* | tops20* | its* \
+	     | os2* | vos* | palmos* | uclinux* | nucleus* | morphos* \
+	     | scout* | superux* | sysv* | rtmk* | tpf* | windiss* \
+	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
+	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
+	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
+	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
+	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr*)
 		;;
 	# This one is extra strict with allowed versions
 	sco3.2v2 | sco3.2v[4-9]* | sco5v6*)
 		# Don't forget version if it is 3.2v4 or newer.
 		;;
-	# This refers to builds using the UEFI calling convention
-	# (which depends on the architecture) and PE file format.
-	# Note that this is both a different calling convention and
-	# different file format than that of GNU-EFI
-	# (x86_64-w64-mingw32).
-	uefi)
-		;;
 	none)
 		;;
-	kernel* | msvc* )
-		# Restricted further below
-		;;
-	'')
-		if test x"$obj" = x
-		then
-			echo "Invalid configuration '$1': Blank OS only allowed with explicit machine code file format" 1>&2
-		fi
-		;;
 	*)
-		echo "Invalid configuration '$1': OS '$os' not recognized" 1>&2
-		exit 1
-		;;
-esac
-
-case $obj in
-	aout* | coff* | elf* | pe*)
-		;;
-	'')
-		# empty is fine
-		;;
-	*)
-		echo "Invalid configuration '$1': Machine code format '$obj' not recognized" 1>&2
-		exit 1
-		;;
-esac
-
-# Here we handle the constraint that a (synthetic) cpu and os are
-# valid only in combination with each other and nowhere else.
-case $cpu-$os in
-	# The "javascript-unknown-ghcjs" triple is used by GHC; we
-	# accept it here in order to tolerate that, but reject any
-	# variations.
-	javascript-ghcjs)
-		;;
-	javascript-* | *-ghcjs)
-		echo "Invalid configuration '$1': cpu '$cpu' is not valid with os '$os$obj'" 1>&2
+		echo Invalid configuration \`"$1"\': OS \`"$os"\' not recognized 1>&2
 		exit 1
 		;;
 esac
 
 # As a final step for OS-related things, validate the OS-kernel combination
 # (given a valid OS), if there is a kernel.
-case $kernel-$os-$obj in
-	linux-gnu*- | linux-android*- | linux-dietlibc*- | linux-llvm*- \
-		    | linux-mlibc*- | linux-musl*- | linux-newlib*- \
-		    | linux-relibc*- | linux-uclibc*- | linux-ohos*- )
-		;;
-	uclinux-uclibc*- | uclinux-gnu*- )
-		;;
-	managarm-mlibc*- | managarm-kernel*- )
+case $kernel-$os in
+	linux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* \
+		   | linux-musl* | linux-relibc* | linux-uclibc* )
 		;;
-	windows*-msvc*-)
+	uclinux-uclibc* )
 		;;
-	-dietlibc*- | -llvm*- | -mlibc*- | -musl*- | -newlib*- | -relibc*- \
-		    | -uclibc*- )
+	-dietlibc* | -newlib* | -musl* | -relibc* | -uclibc* )
 		# These are just libc implementations, not actual OSes, and thus
 		# require a kernel.
-		echo "Invalid configuration '$1': libc '$os' needs explicit kernel." 1>&2
+		echo "Invalid configuration \`$1': libc \`$os' needs explicit kernel." 1>&2
 		exit 1
 		;;
-	-kernel*- )
-		echo "Invalid configuration '$1': '$os' needs explicit kernel." 1>&2
-		exit 1
-		;;
-	*-kernel*- )
-		echo "Invalid configuration '$1': '$kernel' does not support '$os'." 1>&2
-		exit 1
-		;;
-	*-msvc*- )
-		echo "Invalid configuration '$1': '$os' needs 'windows'." 1>&2
-		exit 1
-		;;
-	kfreebsd*-gnu*- | knetbsd*-gnu*- | netbsd*-gnu*- | kopensolaris*-gnu*-)
-		;;
-	vxworks-simlinux- | vxworks-simwindows- | vxworks-spe-)
+	kfreebsd*-gnu* | kopensolaris*-gnu*)
 		;;
-	nto-qnx*-)
+	vxworks-simlinux | vxworks-simwindows | vxworks-spe)
 		;;
-	os2-emx-)
-		;;
-	rtmk-nova-)
+	nto-qnx*)
 		;;
-	*-eabi*- | *-gnueabi*-)
+	os2-emx)
 		;;
-	none--*)
-		# None (no kernel, i.e. freestanding / bare metal),
-		# can be paired with an machine code file format
+	*-eabi* | *-gnueabi*)
 		;;
-	-*-)
+	-*)
 		# Blank kernel with real OS is always fine.
 		;;
-	--*)
-		# Blank kernel and OS with real machine code file format is always fine.
-		;;
-	*-*-*)
-		echo "Invalid configuration '$1': Kernel '$kernel' not known to work with OS '$os'." 1>&2
+	*-*)
+		echo "Invalid configuration \`$1': Kernel \`$kernel' not known to work with OS \`$os'." 1>&2
 		exit 1
 		;;
 esac
@@ -2273,7 +1803,7 @@
 			*-riscix*)
 				vendor=acorn
 				;;
-			*-sunos* | *-solaris*)
+			*-sunos*)
 				vendor=sun
 				;;
 			*-cnk* | *-aix*)
@@ -2343,7 +1873,7 @@
 		;;
 esac
 
-echo "$cpu-$vendor${kernel:+-$kernel}${os:+-$os}${obj:+-$obj}"
+echo "$cpu-$vendor-${kernel:+$kernel-}$os"
 exit
 
 # Local variables:
--- a/build/libtool.m4	2024-11-20 10:48:35.000000000 +0100
+++ b/build/libtool.m4	2024-11-24 01:22:29.000000000 +0100
@@ -4636,7 +4636,7 @@
 extern "C" {
 #endif
 char nm_test_var;
-void nm_test_func(void){}
+void nm_test_func(){}
 #ifdef __cplusplus
 }
 #endif
--- a/build/php_cxx_compile_stdcxx.m4	2024-11-20 10:48:35.000000000 +0100
+++ b/build/php_cxx_compile_stdcxx.m4	2024-11-24 01:22:29.000000000 +0100
@@ -27,11 +27,11 @@
         [$1], [14], [ax_cxx_compile_alternatives="14 1y"],
         [$1], [17], [ax_cxx_compile_alternatives="17 1z"],
         [$1], [20], [ax_cxx_compile_alternatives="20"],
-        [m4_fatal([invalid first argument `$1' to PHP_CXX_COMPILE_STDCXX])])[]dnl
+        [m4_fatal([invalid first argument `$1' to PHP_CXX_COMPILE_STDCXX])])dnl
   m4_if([$2], [], [ax_cxx_compile_cxx$1_required=true],
         [$2], [mandatory], [ax_cxx_compile_cxx$1_required=true],
         [$2], [optional], [ax_cxx_compile_cxx$1_required=false],
-        [m4_fatal([invalid third argument `$2' to PHP_CXX_COMPILE_STDCXX])])[]dnl
+        [m4_fatal([invalid third argument `$2' to PHP_CXX_COMPILE_STDCXX])])dnl
   AC_LANG_PUSH([C++])dnl
   ac_success=no
 
