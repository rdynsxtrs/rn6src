Source: cmocka
Section: devel
Priority: optional
Maintainer: David Prévot <taffit@debian.org>
Uploaders: Sandro Knauß <hefee@debian.org>
Build-Depends: cmake (>= 3.7), debhelper (>= 10)
Build-Depends-indep: doxygen
Standards-Version: 4.2.1
Homepage: https://cmocka.org/
Vcs-Git: https://salsa.debian.org/debian/cmocka.git
Vcs-Browser: https://salsa.debian.org/debian/cmocka

Package: cmocka-doc
Section: doc
Architecture: all
Multi-Arch: foreign
Depends: libjs-jquery, ${misc:Depends}
Description: documentation for the CMocka unit testing framework
 This package contains the documentation and examples for CMocka.
 .
 The idea of CMocka is that a test application only requires the
 standard C library and the CMocka library itself to minimize conflicts
 with standard C headers especially on a lot of different platforms.
 .
 Features:
  * Easy to use framework to write unit tests
  * Support for mock objects
  * Testing of memory leaks, buffer overflows and underflows
  * Platform and compiler independent

Package: libcmocka0
Section: libs
Architecture: any
Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: library for the CMocka unit testing framework
 This is the major library for CMocka.
 .
 The idea of CMocka is that a test application only requires the
 standard C library and the CMocka library itself to minimize conflicts
 with standard C headers especially on a lot of different platforms.
 .
 Features:
  * Easy to use framework to write unit tests
  * Support for mock objects
  * Testing of memory leaks, buffer overflows and underflows
  * Platform and compiler independent

Package: libcmocka-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: libcmocka0 (= ${binary:Version}), ${misc:Depends}
Recommends: cmocka-doc
Description: development files for the CMocka unit testing framework
 This package contains the library development files for CMocka.
 .
 The idea of CMocka is that a test application only requires the
 standard C library and the CMocka library itself to minimize conflicts
 with standard C headers especially on a lot of different platforms.
 .
 Features:
  * Easy to use framework to write unit tests
  * Support for mock objects
  * Testing of memory leaks, buffer overflows and underflows
  * Platform and compiler independent
